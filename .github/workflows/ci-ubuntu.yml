name: CI Ubuntu
on: [push]
jobs:
  build-x86_64-gcc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code and Submodules
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install OS Dependencies
        run: |
          sudo apt-get update
          sudo apt-get upgrade
          sudo apt install xorg-dev 

      - name: Cache Dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: local
          key: dependencies-${{ runner.os }}-gcc
          restore-keys: |
            dependencies-${{ runner.os }}-gcc

      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          sh Xenobuild installdeps gcc debug
          sh Xenobuild installdeps gcc release

      - name: Configure [Debug]
        run: sh Xenobuild configure gcc debug

      - name: Build [Debug]
        run: cmake --build build/gcc/debug

      - name: Configure [Release]
        run: sh Xenobuild configure gcc release

      - name: Build [Release]
        run: cmake --build build/gcc/release

  build-x86_64-clang:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code and Submodules
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install OS Dependencies
        run: |
          sudo apt-get update
          sudo apt-get upgrade
          sudo apt install xorg-dev 

      - name: Cache Dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: local
          key: dependencies-${{ runner.os }}-clang
          restore-keys: |
            dependencies-${{ runner.os }}-clang

      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          sh Xenobuild installdeps clang debug
          sh Xenobuild installdeps clang release

      - name: Configure [Debug]
        run: sh Xenobuild configure clang debug

      - name: Build [Debug]
        run: cmake --build build/clang/debug

      - name: Configure [Release]
        run: sh Xenobuild configure clang release

      - name: Build [Release]
        run: cmake --build build/clang/release
